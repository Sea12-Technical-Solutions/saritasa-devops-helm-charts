{{ if .Values.apps }}
{{- range $project := .Values.apps }}

{{- if $project.enabled }}
{{- range $component := $project.components }}

{{- /* initialize `argocd` variable with either `$component.argocd` dict if it exists or with empty dict */}}
{{ $argocd := ternary $component.argocd dict (hasKey $component "argocd") -}}

{{- /* initialize `wordpress` variable with either `$argocd.wordpress` dict if it exists or with empty dict */}}
{{ $wordpress := ternary $argocd.wordpress dict (hasKey $argocd "wordpress") -}}

{{- $data := dict "project"           $project
                  "component"         $component
                  "environment"       $.Values.environment }}

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
 name: {{ include "tekton-apps.resourceName" (set $data "suffix" "build-pipeline-role") }}
 namespace: {{ $.Release.Namespace }}
rules:
  - apiGroups:  ["extensions", "apps", "batch", ""]
    resources:  ["services", "deployments", "pods", "jobs", "pods/log"]
    verbs:      ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups:  [""]
    resources:  ["pods/log"]
    verbs:      ["get", "list", "watch"]
  - apiGroups:  ["tekton.dev"]
    resources:  ["pipelineruns"]
    verbs:      ["get", "list", "create"]

{{- /* wordpress projects needs a separate role to be able to stop old pod in project's namespace and start a new one */}}
{{- if $wordpress }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
 name: {{ include "tekton-apps.resourceName" (set $data "suffix" "build-pipeline-role") }}
 namespace: {{ $project.argocd.namespace }}
rules:
  - apiGroups:  ["extensions", "apps", "batch", ""]
    resources:  ["services", "deployments", "pods", "jobs", "pods/log"]
    verbs:      ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups:  [""]
    resources:  ["pods/log"]
    verbs:      ["get", "list", "watch"]
  - apiGroups:  ["tekton.dev"]
    resources:  ["pipelineruns"]
    verbs:      ["get", "list", "create"]
{{- end }}

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
 name: {{ include "tekton-apps.resourceName" (set $data "suffix" "trigger-role") }}
 namespace: {{ $.Release.Namespace }}
rules:
  - apiGroups:  ["triggers.tekton.dev"]
    resources:  ["eventlisteners", "triggerbindings", "triggertemplates", "clusterinterceptors"]
    verbs:      ["get", "list", "watch", "create", "update", "patch", "delete"]

  - apiGroups:  ["triggers.tekton.dev"]
    resources:  ["triggers", "clustertriggerbindings"]
    verbs:      ["get", "list", "watch"]

  - apiGroups:  ["tekton.dev"]
    resources:  ["pipelineruns", "pipelineresources", "taskruns"]
    verbs:      ["create"]

  - apiGroups:  ["extensions"]
    resources:  ["ingresses"]
    verbs:      ["get", "list", "watch", "create", "update", "patch", "delete"]

  - apiGroups:  [""]
    resources:  ["configmaps", "secrets", "serviceaccounts"]
    verbs:      ["get", "list", "watch", "impersonate"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "build-pipeline-role-binding") }}
  namespace: {{ $.Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "build-pipeline-role") }}
subjects:
- kind: ServiceAccount
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "build-pipeline-sa") }}
  namespace: {{ $.Release.Namespace }}
- kind: ServiceAccount
  name: build-bot-sa
  namespace: {{ $.Release.Namespace }}

{{- /* wordpress projects needs a separate role to be able to stop old pod in project's namespace and start a new one */}}
{{- if $wordpress }}
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "build-pipeline-role-binding") }}
  namespace: {{ $project.argocd.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "build-pipeline-role") }}
subjects:
- kind: ServiceAccount
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "build-pipeline-sa") }}
  namespace: {{ $.Release.Namespace }}
{{- end }}
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "trigger-role-binding") }}
  namespace: {{ $.Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "trigger-role") }}
subjects:
- kind: ServiceAccount
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "trigger-sa") }}
  namespace: {{ $.Release.Namespace }}
- kind: ServiceAccount
  name: build-bot-sa
  namespace: {{ $.Release.Namespace }}

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
 name: {{ include "tekton-apps.resourceName" (set $data "suffix" "triggger-cluster-role") }}
rules:
  - apiGroups: ["triggers.tekton.dev"]
    resources: ["clustertriggerbindings", "clusterinterceptors"]
    verbs: ["get", "list", "watch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "triggger-cluster-role-binding") }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "triggger-cluster-role") }}
subjects:
- kind: ServiceAccount
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "trigger-sa") }}
  namespace: {{ $.Release.Namespace }}
- kind: ServiceAccount
  name: build-bot-sa
  namespace: {{ $.Release.Namespace }}

---

{{- end }} # range component
{{- end }} # if project.enabled
{{- end }} # range
{{- end }} # if apps
