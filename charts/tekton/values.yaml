# Default values for tekton.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# this is required name of the hosted zone
domainZone: "site.com"

# https://github.com/tektoncd/pipeline/blob/main/docs/podtemplates.md
# if you need to create dockerhub secrets you can follow the example below
# ----------------------------------------------------------------------------
# kubectl create secret -n argo-cd generic docker-saritasa-infra-v2-ro \
#     --from-file=.dockerconfigjson=$HOME/.docker/config.json \
#     --type=kubernetes.io/dockerconfigjson
# ----------------------------------------------------------------------------
# 
engine:
  enabled: true
  config: {}
    # defaultServiceAccount: "build-bot-sa"
    # defaultTimeoutMinutes: "60"
    # defaultPodTemplate: |
    #   imagePullSecrets:
    #     - name: "docker-saritasa-infra-v2-ro"      
    #   nodeSelector:
    #     ci: "true"
  controller:
    args: |
      # performance considerations
      # uncomment 3 lines below if you need it
      # https://github.com/tektoncd/pipeline/blob/main/docs/tekton-controller-performance-configuration.md
      # "-kube-api-qps", "5",
      # "-kube-api-burst", "10",
      # "-threads-per-controller", "20",      

triggers:
  enabled: true

dashboard:
  enabled: true
  ingress: {}
    # enabled: true
    # className: "nginx"
    # annotations: 
    #   kubernetes.io/ingress.class: "nginx"
    #   nginx.ingress.kubernetes.io/proxy-body-size: 100m
    #   cert-manager.io/cluster-issuer: "letsencrypt-prod"
    #   nginx.ingress.kubernetes.io/auth-type: basic
    #   nginx.ingress.kubernetes.io/auth-secret: tekton-basic-auth
    #   nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
    #   argocd.argoproj.io/sync-wave: "1"      
    # hosts:
    #   - host: tekton.site.com
    #     paths:
    #       - path: /
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: tekton-dashboard
    #             port:
    #               number: 9097    
    # tls: 
    #  - secretName: tekton.site.com-crt
    #    hosts:
    #      - tekton.site.com

webhook:
  enabled: true
  namespace: "ci"
  ingress: {}
    # enabled: true
    # className: "nginx"
    # annotations: 
    #   kubernetes.io/ingress.class: "nginx"
    #   nginx.ingress.kubernetes.io/proxy-body-size: 100m
    #   cert-manager.io/cluster-issuer: "letsencrypt-prod"
    #   argocd.argoproj.io/sync-wave: "10"
    # hosts:
    #   - host: webhook.site.com
    #     paths:
    #       - path: /
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: el-build-pipeline-event-listener
    #             port:
    #               number: 8080    
    # tls: 
    #  - secretName: webhook.site.com-crt
    #    hosts:
    #      - webhook.site.com


imagePullSecrets: []
# - name: "docker-saritasa-infra-v2-ro"  

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "build-bot-sa"


nodeSelector: {}
#  tekton_builder: "true"

tolerations: []

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/os
              operator: NotIn
              values:
                - windows
